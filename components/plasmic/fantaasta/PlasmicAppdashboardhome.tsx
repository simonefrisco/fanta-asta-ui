// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: xdSnfxWCziyzb8tBiGitqa
// Component: u-hfTCv0IT
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_fantaasta.module.css"; // plasmic-import: xdSnfxWCziyzb8tBiGitqa/projectcss
import sty from "./PlasmicAppdashboardhome.module.css"; // plasmic-import: u-hfTCv0IT/css

import AddIcon from "./icons/PlasmicIcon__Add"; // plasmic-import: jjPyQHhLtQ/icon
import DeviceHubIcon from "./icons/PlasmicIcon__DeviceHub"; // plasmic-import: 4Po3uiQnik8/icon
import Group29Icon from "./icons/PlasmicIcon__Group29"; // plasmic-import: Hra-cTI_s/icon
import SettingsIcon from "./icons/PlasmicIcon__Settings"; // plasmic-import: mx48enuirr/icon
import BlurOnIcon from "./icons/PlasmicIcon__BlurOn"; // plasmic-import: bQcJgXZKSGY/icon
import CancelIcon from "./icons/PlasmicIcon__Cancel"; // plasmic-import: fIWqBdD_Vcs/icon
import SearchIcon from "./icons/PlasmicIcon__Search"; // plasmic-import: Dz2-NnCEs4Z/icon
import NotificationsIcon from "./icons/PlasmicIcon__Notifications"; // plasmic-import: 28qGRcgBF8O/icon
import ArrowDropDownIcon from "./icons/PlasmicIcon__ArrowDropDown"; // plasmic-import: P0FXFDHdpln/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: msMKgGOxL/icon
import Horizontal3Icon from "./icons/PlasmicIcon__Horizontal3"; // plasmic-import: cRiIfGDQiCW/icon
import Icon5Icon from "./icons/PlasmicIcon__Icon5"; // plasmic-import: QVEWgjasr4y/icon
import Icon6Icon from "./icons/PlasmicIcon__Icon6"; // plasmic-import: GkhW16sGEpk/icon

export type PlasmicAppdashboardhome__VariantMembers = {};

export type PlasmicAppdashboardhome__VariantsArgs = {};
type VariantPropType = keyof PlasmicAppdashboardhome__VariantsArgs;
export const PlasmicAppdashboardhome__VariantProps =
  new Array<VariantPropType>();

export type PlasmicAppdashboardhome__ArgsType = {};
type ArgPropType = keyof PlasmicAppdashboardhome__ArgsType;
export const PlasmicAppdashboardhome__ArgProps = new Array<ArgPropType>();

export type PlasmicAppdashboardhome__OverridesType = {
  root?: p.Flex<"div">;
  home?: p.Flex<"div">;
  rectangle6?: p.Flex<"div">;
  frame70?: p.Flex<"div">;
  _1OneLine?: p.Flex<"div">;
  right?: p.Flex<"div">;
  xBase1OneLineLeftLabelIcon?: p.Flex<"div">;
  _1OneLine2?: p.Flex<"div">;
  right2?: p.Flex<"div">;
  xBase1OneLineLeftLabelIcon2?: p.Flex<"div">;
  _1OneLine3?: p.Flex<"div">;
  right3?: p.Flex<"div">;
  xBase1OneLineLeftLabelIcon3?: p.Flex<"div">;
  group1?: p.Flex<"div">;
  logo?: p.Flex<"div">;
  rectangle1?: p.Flex<"div">;
  searchBar?: p.Flex<"div">;
  right4?: p.Flex<"div">;
  left?: p.Flex<"div">;
  textState?: p.Flex<"div">;
  frame71?: p.Flex<"div">;
  group10?: p.Flex<"div">;
  counter?: p.Flex<"div">;
  frame7?: p.Flex<"div">;
  avatar?: p.Flex<"div">;
  status?: p.Flex<"div">;
  frame6?: p.Flex<"div">;
  avatarOneLine?: p.Flex<"div">;
  avatar2?: p.Flex<"div">;
  kk?: p.Flex<"div">;
  statusDot?: p.Flex<"div">;
  mikeBrown?: p.Flex<"div">;
  frame108?: p.Flex<"div">;
  frame109?: p.Flex<"div">;
  frame111?: p.Flex<"div">;
  button?: p.Flex<"div">;
  button2?: p.Flex<"div">;
  text2?: p.Flex<"div">;
  counter2?: p.Flex<"div">;
  compo2?: p.Flex<"div">;
  avatarOneLine2?: p.Flex<"div">;
  avatar3?: p.Flex<"div">;
  statusDot2?: p.Flex<"div">;
  badge?: p.Flex<"div">;
  xBaseBadge?: p.Flex<"div">;
  text3?: p.Flex<"div">;
  compo1?: p.Flex<"div">;
  avatarOneLine3?: p.Flex<"div">;
  avatar4?: p.Flex<"div">;
  statusDot3?: p.Flex<"div">;
  badge2?: p.Flex<"div">;
  xBaseBadge2?: p.Flex<"div">;
  text4?: p.Flex<"div">;
  compo3?: p.Flex<"div">;
  avatarOneLine4?: p.Flex<"div">;
  avatar5?: p.Flex<"div">;
  statusDot4?: p.Flex<"div">;
  badge3?: p.Flex<"div">;
  xBaseBadge3?: p.Flex<"div">;
  text5?: p.Flex<"div">;
  compo4?: p.Flex<"div">;
  avatarOneLine5?: p.Flex<"div">;
  avatar6?: p.Flex<"div">;
  statusDot5?: p.Flex<"div">;
  badge4?: p.Flex<"div">;
  xBaseBadge4?: p.Flex<"div">;
  text6?: p.Flex<"div">;
  compo5?: p.Flex<"div">;
  avatarOneLine6?: p.Flex<"div">;
  avatar7?: p.Flex<"div">;
  statusDot6?: p.Flex<"div">;
  badge5?: p.Flex<"div">;
  xBaseBadge5?: p.Flex<"div">;
  text7?: p.Flex<"div">;
  compo6?: p.Flex<"div">;
  avatarOneLine7?: p.Flex<"div">;
  avatar8?: p.Flex<"div">;
  statusDot7?: p.Flex<"div">;
  badge6?: p.Flex<"div">;
  xBaseBadge6?: p.Flex<"div">;
  text8?: p.Flex<"div">;
  compo7?: p.Flex<"div">;
  avatarOneLine8?: p.Flex<"div">;
  avatar9?: p.Flex<"div">;
  statusDot8?: p.Flex<"div">;
  badge7?: p.Flex<"div">;
  xBaseBadge7?: p.Flex<"div">;
  text9?: p.Flex<"div">;
  compo8?: p.Flex<"div">;
  avatarOneLine9?: p.Flex<"div">;
  avatar10?: p.Flex<"div">;
  statusDot9?: p.Flex<"div">;
  badge8?: p.Flex<"div">;
  xBaseBadge8?: p.Flex<"div">;
  text10?: p.Flex<"div">;
  compo9?: p.Flex<"div">;
  avatarOneLine10?: p.Flex<"div">;
  avatar11?: p.Flex<"div">;
  statusDot10?: p.Flex<"div">;
  badge9?: p.Flex<"div">;
  xBaseBadge9?: p.Flex<"div">;
  text11?: p.Flex<"div">;
  compo10?: p.Flex<"div">;
  avatarOneLine11?: p.Flex<"div">;
  avatar12?: p.Flex<"div">;
  statusDot11?: p.Flex<"div">;
  badge10?: p.Flex<"div">;
  xBaseBadge10?: p.Flex<"div">;
  text12?: p.Flex<"div">;
  compo11?: p.Flex<"div">;
  avatarOneLine12?: p.Flex<"div">;
  avatar13?: p.Flex<"div">;
  statusDot12?: p.Flex<"div">;
  badge11?: p.Flex<"div">;
  xBaseBadge11?: p.Flex<"div">;
  text13?: p.Flex<"div">;
  compo12?: p.Flex<"div">;
  avatarOneLine13?: p.Flex<"div">;
  avatar14?: p.Flex<"div">;
  statusDot13?: p.Flex<"div">;
  badge12?: p.Flex<"div">;
  xBaseBadge12?: p.Flex<"div">;
  text14?: p.Flex<"div">;
  columns?: p.Flex<"div">;
};

export interface DefaultAppdashboardhomeProps {}

function PlasmicAppdashboardhome__RenderFunc(props: {
  variants: PlasmicAppdashboardhome__VariantsArgs;
  args: PlasmicAppdashboardhome__ArgsType;
  overrides: PlasmicAppdashboardhome__OverridesType;

  forNode?: string;
}) {
  const { variants, args, overrides, forNode } = props;

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{"Dashboard"}</title>
        <meta key="og:title" property="og:title" content={"Dashboard"} />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            sty.root
          )}
        >
          <div
            data-plasmic-name={"home"}
            data-plasmic-override={overrides.home}
            className={classNames(projectcss.all, sty.home)}
          >
            <div
              data-plasmic-name={"rectangle6"}
              data-plasmic-override={overrides.rectangle6}
              className={classNames(projectcss.all, sty.rectangle6)}
            />

            <div
              data-plasmic-name={"frame70"}
              data-plasmic-override={overrides.frame70}
              className={classNames(projectcss.all, sty.frame70)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__xszeE
                )}
              >
                {"General"}
              </div>

              {false ? (
                <AddIcon
                  className={classNames(projectcss.all, sty.svg__iGHn4)}
                  role={"img"}
                />
              ) : null}
            </div>

            <div
              data-plasmic-name={"_1OneLine"}
              data-plasmic-override={overrides._1OneLine}
              className={classNames(projectcss.all, sty._1OneLine)}
            >
              {false ? (
                <div
                  data-plasmic-name={"right"}
                  data-plasmic-override={overrides.right}
                  className={classNames(projectcss.all, sty.right)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__roNa3
                    )}
                  >
                    {"Text"}
                  </div>
                </div>
              ) : null}

              <div
                data-plasmic-name={"xBase1OneLineLeftLabelIcon"}
                data-plasmic-override={overrides.xBase1OneLineLeftLabelIcon}
                className={classNames(
                  projectcss.all,
                  sty.xBase1OneLineLeftLabelIcon
                )}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__p30ID
                  )}
                >
                  {"Guide"}
                </div>

                <DeviceHubIcon
                  className={classNames(projectcss.all, sty.svg__xGuUi)}
                  role={"img"}
                />
              </div>
            </div>

            <div
              data-plasmic-name={"_1OneLine2"}
              data-plasmic-override={overrides._1OneLine2}
              className={classNames(projectcss.all, sty._1OneLine2)}
            >
              {false ? (
                <div
                  data-plasmic-name={"right2"}
                  data-plasmic-override={overrides.right2}
                  className={classNames(projectcss.all, sty.right2)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__iOhl8
                    )}
                  >
                    {"Text"}
                  </div>
                </div>
              ) : null}

              <div
                data-plasmic-name={"xBase1OneLineLeftLabelIcon2"}
                data-plasmic-override={overrides.xBase1OneLineLeftLabelIcon2}
                className={classNames(
                  projectcss.all,
                  sty.xBase1OneLineLeftLabelIcon2
                )}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__bo5Ci
                  )}
                >
                  {"FAQ"}
                </div>

                <Group29Icon
                  className={classNames(projectcss.all, sty.svg__fiM83)}
                  role={"img"}
                />
              </div>
            </div>

            <div
              data-plasmic-name={"_1OneLine3"}
              data-plasmic-override={overrides._1OneLine3}
              className={classNames(projectcss.all, sty._1OneLine3)}
            >
              {false ? (
                <div
                  data-plasmic-name={"right3"}
                  data-plasmic-override={overrides.right3}
                  className={classNames(projectcss.all, sty.right3)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__jAlF
                    )}
                  >
                    {"Text"}
                  </div>
                </div>
              ) : null}

              <div
                data-plasmic-name={"xBase1OneLineLeftLabelIcon3"}
                data-plasmic-override={overrides.xBase1OneLineLeftLabelIcon3}
                className={classNames(
                  projectcss.all,
                  sty.xBase1OneLineLeftLabelIcon3
                )}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ylsKc
                  )}
                >
                  {"Impostazioni"}
                </div>

                <SettingsIcon
                  className={classNames(projectcss.all, sty.svg__uKewm)}
                  role={"img"}
                />
              </div>
            </div>

            <div
              data-plasmic-name={"group1"}
              data-plasmic-override={overrides.group1}
              className={classNames(projectcss.all, sty.group1)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__tnaG7
                )}
              >
                {"Acme Co."}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__xJeuI
                )}
              >
                {"Palo Alto, CA"}
              </div>
            </div>

            <div
              data-plasmic-name={"logo"}
              data-plasmic-override={overrides.logo}
              className={classNames(projectcss.all, sty.logo)}
            >
              <div
                data-plasmic-name={"rectangle1"}
                data-plasmic-override={overrides.rectangle1}
                className={classNames(projectcss.all, sty.rectangle1)}
              />

              <BlurOnIcon
                className={classNames(projectcss.all, sty.svg__iP66L)}
                role={"img"}
              />
            </div>

            <div
              data-plasmic-name={"searchBar"}
              data-plasmic-override={overrides.searchBar}
              className={classNames(projectcss.all, sty.searchBar)}
            >
              {false ? (
                <div
                  data-plasmic-name={"right4"}
                  data-plasmic-override={overrides.right4}
                  className={classNames(projectcss.all, sty.right4)}
                >
                  <CancelIcon
                    className={classNames(projectcss.all, sty.svg__jGAoK)}
                    role={"img"}
                  />
                </div>
              ) : null}

              <div
                data-plasmic-name={"left"}
                data-plasmic-override={overrides.left}
                className={classNames(projectcss.all, sty.left)}
              >
                <SearchIcon
                  className={classNames(projectcss.all, sty.svg___9E0Wq)}
                  role={"img"}
                />

                <div
                  data-plasmic-name={"textState"}
                  data-plasmic-override={overrides.textState}
                  className={classNames(projectcss.all, sty.textState)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___13PmI
                    )}
                  >
                    {"Search"}
                  </div>
                </div>
              </div>
            </div>

            <p.Stack
              as={"div"}
              data-plasmic-name={"frame71"}
              data-plasmic-override={overrides.frame71}
              hasGap={true}
              className={classNames(projectcss.all, sty.frame71)}
            >
              <div
                data-plasmic-name={"group10"}
                data-plasmic-override={overrides.group10}
                className={classNames(projectcss.all, sty.group10)}
              >
                <NotificationsIcon
                  className={classNames(projectcss.all, sty.svg___5FHjb)}
                  role={"img"}
                />

                <div
                  data-plasmic-name={"counter"}
                  data-plasmic-override={overrides.counter}
                  className={classNames(projectcss.all, sty.counter)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__jZsa
                    )}
                  >
                    {"2"}
                  </div>
                </div>
              </div>

              <p.Stack
                as={"div"}
                data-plasmic-name={"frame7"}
                data-plasmic-override={overrides.frame7}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame7)}
              >
                <div
                  data-plasmic-name={"avatar"}
                  data-plasmic-override={overrides.avatar}
                  className={classNames(projectcss.all, sty.avatar)}
                >
                  <div
                    data-plasmic-name={"status"}
                    data-plasmic-override={overrides.status}
                    className={classNames(projectcss.all, sty.status)}
                  />
                </div>

                <ArrowDropDownIcon
                  className={classNames(projectcss.all, sty.svg__lrAl)}
                  role={"img"}
                />
              </p.Stack>

              <p.Stack
                as={"div"}
                data-plasmic-name={"frame6"}
                data-plasmic-override={overrides.frame6}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame6)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"avatarOneLine"}
                  data-plasmic-override={overrides.avatarOneLine}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.avatarOneLine)}
                >
                  <div
                    data-plasmic-name={"avatar2"}
                    data-plasmic-override={overrides.avatar2}
                    className={classNames(projectcss.all, sty.avatar2)}
                  >
                    <div
                      data-plasmic-name={"kk"}
                      data-plasmic-override={overrides.kk}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.kk
                      )}
                    >
                      {"P"}
                    </div>

                    {false ? (
                      <div
                        data-plasmic-name={"statusDot"}
                        data-plasmic-override={overrides.statusDot}
                        className={classNames(projectcss.all, sty.statusDot)}
                      />
                    ) : null}
                  </div>

                  <div
                    data-plasmic-name={"mikeBrown"}
                    data-plasmic-override={overrides.mikeBrown}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.mikeBrown
                    )}
                  >
                    {"Pixsellz"}
                  </div>
                </p.Stack>

                <ArrowDropDownIcon
                  className={classNames(projectcss.all, sty.svg__yTEx9)}
                  role={"img"}
                />
              </p.Stack>
            </p.Stack>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__dXx0T
              )}
            >
              {"Homepage"}
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__rqmaq
              )}
            >
              {"Good to see you again, James"}
            </div>

            <div
              data-plasmic-name={"frame108"}
              data-plasmic-override={overrides.frame108}
              className={classNames(projectcss.all, sty.frame108)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"frame109"}
                data-plasmic-override={overrides.frame109}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame109)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__un5KG
                  )}
                >
                  {"Statistiche"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__sKtWt
                  )}
                >
                  {"Unisciti ad un asta"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___3I87E
                  )}
                >
                  {"Formazione ideale"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__sZmgG
                  )}
                >
                  {"Profilo allenatore"}
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                data-plasmic-name={"frame111"}
                data-plasmic-override={overrides.frame111}
                hasGap={true}
                className={classNames(projectcss.all, sty.frame111)}
              >
                <div
                  data-plasmic-name={"button"}
                  data-plasmic-override={overrides.button}
                  className={classNames(projectcss.all, sty.button)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"button2"}
                    data-plasmic-override={overrides.button2}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.button2)}
                  >
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__fevLc)}
                        role={"img"}
                      />
                    ) : null}

                    <div
                      data-plasmic-name={"text2"}
                      data-plasmic-override={overrides.text2}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text2
                      )}
                    >
                      {"Crea Asta"}
                    </div>

                    {false ? (
                      <div
                        data-plasmic-name={"counter2"}
                        data-plasmic-override={overrides.counter2}
                        className={classNames(projectcss.all, sty.counter2)}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__w62R5
                          )}
                        >
                          {"0"}
                        </div>
                      </div>
                    ) : null}
                    {false ? (
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__a0Xq8)}
                        role={"img"}
                      />
                    ) : null}
                  </p.Stack>
                </div>
              </p.Stack>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__hZxWb
                )}
              >
                {"Aste in corso"}
              </div>
            </div>

            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__apTaz
              )}
            >
              {"Il fantacalcio in due modalità"}
            </div>

            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__bNeh3)}>
                {true ? (
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___5DwS)}
                  >
                    <div
                      data-plasmic-name={"compo2"}
                      data-plasmic-override={overrides.compo2}
                      className={classNames(projectcss.all, sty.compo2)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"avatarOneLine2"}
                        data-plasmic-override={overrides.avatarOneLine2}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.avatarOneLine2
                        )}
                      >
                        <div
                          data-plasmic-name={"avatar3"}
                          data-plasmic-override={overrides.avatar3}
                          className={classNames(projectcss.all, sty.avatar3)}
                        >
                          {false ? (
                            <div
                              data-plasmic-name={"statusDot2"}
                              data-plasmic-override={overrides.statusDot2}
                              className={classNames(
                                projectcss.all,
                                sty.statusDot2
                              )}
                            />
                          ) : null}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__amh6E
                          )}
                        >
                          {"MANTRA"}
                        </div>
                      </p.Stack>

                      <Horizontal3Icon
                        className={classNames(projectcss.all, sty.svg___1Ezwt)}
                        role={"img"}
                      />

                      <div
                        data-plasmic-name={"badge"}
                        data-plasmic-override={overrides.badge}
                        className={classNames(projectcss.all, sty.badge)}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"xBaseBadge"}
                          data-plasmic-override={overrides.xBaseBadge}
                          hasGap={true}
                          className={classNames(projectcss.all, sty.xBaseBadge)}
                        >
                          <Icon5Icon
                            className={classNames(projectcss.all, sty.svg__mqU)}
                            role={"img"}
                          />

                          <div
                            data-plasmic-name={"text3"}
                            data-plasmic-override={overrides.text3}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text3
                            )}
                          >
                            {"Sales"}
                          </div>

                          {false ? (
                            <Icon6Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg___7RNhn
                              )}
                              role={"img"}
                            />
                          ) : null}
                        </p.Stack>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__skxMx
                        )}
                      >
                        {"$2,794.00"}
                      </div>
                    </div>

                    <div
                      data-plasmic-name={"compo1"}
                      data-plasmic-override={overrides.compo1}
                      className={classNames(projectcss.all, sty.compo1)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"avatarOneLine3"}
                        data-plasmic-override={overrides.avatarOneLine3}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.avatarOneLine3
                        )}
                      >
                        <div
                          data-plasmic-name={"avatar4"}
                          data-plasmic-override={overrides.avatar4}
                          className={classNames(projectcss.all, sty.avatar4)}
                        >
                          {false ? (
                            <div
                              data-plasmic-name={"statusDot3"}
                              data-plasmic-override={overrides.statusDot3}
                              className={classNames(
                                projectcss.all,
                                sty.statusDot3
                              )}
                            />
                          ) : null}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__vzPah
                          )}
                        >
                          {"CLASSICO"}
                        </div>
                      </p.Stack>

                      <Horizontal3Icon
                        className={classNames(projectcss.all, sty.svg___1MIjd)}
                        role={"img"}
                      />

                      <div
                        data-plasmic-name={"badge2"}
                        data-plasmic-override={overrides.badge2}
                        className={classNames(projectcss.all, sty.badge2)}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"xBaseBadge2"}
                          data-plasmic-override={overrides.xBaseBadge2}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.xBaseBadge2
                          )}
                        >
                          <Icon5Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__eT5U7
                            )}
                            role={"img"}
                          />

                          <div
                            data-plasmic-name={"text4"}
                            data-plasmic-override={overrides.text4}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text4
                            )}
                          >
                            {"Sales"}
                          </div>

                          {false ? (
                            <Icon6Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__bid9S
                              )}
                              role={"img"}
                            />
                          ) : null}
                        </p.Stack>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__smcHh
                        )}
                      >
                        {"$2,794.00"}
                      </div>
                    </div>

                    <div
                      data-plasmic-name={"compo3"}
                      data-plasmic-override={overrides.compo3}
                      className={classNames(projectcss.all, sty.compo3)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"avatarOneLine4"}
                        data-plasmic-override={overrides.avatarOneLine4}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.avatarOneLine4
                        )}
                      >
                        <div
                          data-plasmic-name={"avatar5"}
                          data-plasmic-override={overrides.avatar5}
                          className={classNames(projectcss.all, sty.avatar5)}
                        >
                          {false ? (
                            <div
                              data-plasmic-name={"statusDot4"}
                              data-plasmic-override={overrides.statusDot4}
                              className={classNames(
                                projectcss.all,
                                sty.statusDot4
                              )}
                            />
                          ) : null}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___4IioU
                          )}
                        >
                          {"CLASSICO"}
                        </div>
                      </p.Stack>

                      <Horizontal3Icon
                        className={classNames(projectcss.all, sty.svg__osLwE)}
                        role={"img"}
                      />

                      <div
                        data-plasmic-name={"badge3"}
                        data-plasmic-override={overrides.badge3}
                        className={classNames(projectcss.all, sty.badge3)}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"xBaseBadge3"}
                          data-plasmic-override={overrides.xBaseBadge3}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.xBaseBadge3
                          )}
                        >
                          <Icon5Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__onxp
                            )}
                            role={"img"}
                          />

                          <div
                            data-plasmic-name={"text5"}
                            data-plasmic-override={overrides.text5}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text5
                            )}
                          >
                            {"Sales"}
                          </div>

                          {false ? (
                            <Icon6Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__iCvZo
                              )}
                              role={"img"}
                            />
                          ) : null}
                        </p.Stack>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___8Gt0M
                        )}
                      >
                        {"$2,794.00"}
                      </div>

                      <div
                        data-plasmic-name={"compo4"}
                        data-plasmic-override={overrides.compo4}
                        className={classNames(projectcss.all, sty.compo4)}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"avatarOneLine5"}
                          data-plasmic-override={overrides.avatarOneLine5}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.avatarOneLine5
                          )}
                        >
                          <div
                            data-plasmic-name={"avatar6"}
                            data-plasmic-override={overrides.avatar6}
                            className={classNames(projectcss.all, sty.avatar6)}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={"statusDot5"}
                                data-plasmic-override={overrides.statusDot5}
                                className={classNames(
                                  projectcss.all,
                                  sty.statusDot5
                                )}
                              />
                            ) : null}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__xEOi
                            )}
                          >
                            {"CLASSICO"}
                          </div>
                        </p.Stack>

                        <Horizontal3Icon
                          className={classNames(projectcss.all, sty.svg__n8N5E)}
                          role={"img"}
                        />

                        <div
                          data-plasmic-name={"badge4"}
                          data-plasmic-override={overrides.badge4}
                          className={classNames(projectcss.all, sty.badge4)}
                        >
                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"xBaseBadge4"}
                            data-plasmic-override={overrides.xBaseBadge4}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.xBaseBadge4
                            )}
                          >
                            <Icon5Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg___4KqcQ
                              )}
                              role={"img"}
                            />

                            <div
                              data-plasmic-name={"text6"}
                              data-plasmic-override={overrides.text6}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text6
                              )}
                            >
                              {"Sales"}
                            </div>

                            {false ? (
                              <Icon6Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__bavdY
                                )}
                                role={"img"}
                              />
                            ) : null}
                          </p.Stack>
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__kqYTv
                          )}
                        >
                          {"$2,794.00"}
                        </div>

                        <div
                          data-plasmic-name={"compo5"}
                          data-plasmic-override={overrides.compo5}
                          className={classNames(projectcss.all, sty.compo5)}
                        >
                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"avatarOneLine6"}
                            data-plasmic-override={overrides.avatarOneLine6}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.avatarOneLine6
                            )}
                          >
                            <div
                              data-plasmic-name={"avatar7"}
                              data-plasmic-override={overrides.avatar7}
                              className={classNames(
                                projectcss.all,
                                sty.avatar7
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={"statusDot6"}
                                  data-plasmic-override={overrides.statusDot6}
                                  className={classNames(
                                    projectcss.all,
                                    sty.statusDot6
                                  )}
                                />
                              ) : null}
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__qKwKp
                              )}
                            >
                              {"CLASSICO"}
                            </div>
                          </p.Stack>

                          <Horizontal3Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__oUaj
                            )}
                            role={"img"}
                          />

                          <div
                            data-plasmic-name={"badge5"}
                            data-plasmic-override={overrides.badge5}
                            className={classNames(projectcss.all, sty.badge5)}
                          >
                            <p.Stack
                              as={"div"}
                              data-plasmic-name={"xBaseBadge5"}
                              data-plasmic-override={overrides.xBaseBadge5}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.xBaseBadge5
                              )}
                            >
                              <Icon5Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___7LkYx
                                )}
                                role={"img"}
                              />

                              <div
                                data-plasmic-name={"text7"}
                                data-plasmic-override={overrides.text7}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text7
                                )}
                              >
                                {"Sales"}
                              </div>

                              {false ? (
                                <Icon6Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__p9GA
                                  )}
                                  role={"img"}
                                />
                              ) : null}
                            </p.Stack>
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text___3FFCx
                            )}
                          >
                            {"$2,794.00"}
                          </div>
                        </div>

                        <div
                          data-plasmic-name={"compo6"}
                          data-plasmic-override={overrides.compo6}
                          className={classNames(projectcss.all, sty.compo6)}
                        >
                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"avatarOneLine7"}
                            data-plasmic-override={overrides.avatarOneLine7}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.avatarOneLine7
                            )}
                          >
                            <div
                              data-plasmic-name={"avatar8"}
                              data-plasmic-override={overrides.avatar8}
                              className={classNames(
                                projectcss.all,
                                sty.avatar8
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={"statusDot7"}
                                  data-plasmic-override={overrides.statusDot7}
                                  className={classNames(
                                    projectcss.all,
                                    sty.statusDot7
                                  )}
                                />
                              ) : null}
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__mcjTn
                              )}
                            >
                              {"CLASSICO"}
                            </div>
                          </p.Stack>

                          <Horizontal3Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__ivId8
                            )}
                            role={"img"}
                          />

                          <div
                            data-plasmic-name={"badge6"}
                            data-plasmic-override={overrides.badge6}
                            className={classNames(projectcss.all, sty.badge6)}
                          >
                            <p.Stack
                              as={"div"}
                              data-plasmic-name={"xBaseBadge6"}
                              data-plasmic-override={overrides.xBaseBadge6}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.xBaseBadge6
                              )}
                            >
                              <Icon5Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__yPeuv
                                )}
                                role={"img"}
                              />

                              <div
                                data-plasmic-name={"text8"}
                                data-plasmic-override={overrides.text8}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text8
                                )}
                              >
                                {"Sales"}
                              </div>

                              {false ? (
                                <Icon6Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__gr8T7
                                  )}
                                  role={"img"}
                                />
                              ) : null}
                            </p.Stack>
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__vp6Ql
                            )}
                          >
                            {"$2,794.00"}
                          </div>
                        </div>
                      </div>
                    </div>

                    <div
                      data-plasmic-name={"compo7"}
                      data-plasmic-override={overrides.compo7}
                      className={classNames(projectcss.all, sty.compo7)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"avatarOneLine8"}
                        data-plasmic-override={overrides.avatarOneLine8}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.avatarOneLine8
                        )}
                      >
                        <div
                          data-plasmic-name={"avatar9"}
                          data-plasmic-override={overrides.avatar9}
                          className={classNames(projectcss.all, sty.avatar9)}
                        >
                          {false ? (
                            <div
                              data-plasmic-name={"statusDot8"}
                              data-plasmic-override={overrides.statusDot8}
                              className={classNames(
                                projectcss.all,
                                sty.statusDot8
                              )}
                            />
                          ) : null}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__snI1B
                          )}
                        >
                          {"CLASSICO"}
                        </div>
                      </p.Stack>

                      <Horizontal3Icon
                        className={classNames(projectcss.all, sty.svg__nT9OT)}
                        role={"img"}
                      />

                      <div
                        data-plasmic-name={"badge7"}
                        data-plasmic-override={overrides.badge7}
                        className={classNames(projectcss.all, sty.badge7)}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"xBaseBadge7"}
                          data-plasmic-override={overrides.xBaseBadge7}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.xBaseBadge7
                          )}
                        >
                          <Icon5Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__wQEgr
                            )}
                            role={"img"}
                          />

                          <div
                            data-plasmic-name={"text9"}
                            data-plasmic-override={overrides.text9}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text9
                            )}
                          >
                            {"Sales"}
                          </div>

                          {false ? (
                            <Icon6Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__yrpP0
                              )}
                              role={"img"}
                            />
                          ) : null}
                        </p.Stack>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__f4JAt
                        )}
                      >
                        {"$2,794.00"}
                      </div>

                      <div
                        data-plasmic-name={"compo8"}
                        data-plasmic-override={overrides.compo8}
                        className={classNames(projectcss.all, sty.compo8)}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"avatarOneLine9"}
                          data-plasmic-override={overrides.avatarOneLine9}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.avatarOneLine9
                          )}
                        >
                          <div
                            data-plasmic-name={"avatar10"}
                            data-plasmic-override={overrides.avatar10}
                            className={classNames(projectcss.all, sty.avatar10)}
                          >
                            {false ? (
                              <div
                                data-plasmic-name={"statusDot9"}
                                data-plasmic-override={overrides.statusDot9}
                                className={classNames(
                                  projectcss.all,
                                  sty.statusDot9
                                )}
                              />
                            ) : null}
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__usrg5
                            )}
                          >
                            {"CLASSICO"}
                          </div>
                        </p.Stack>

                        <Horizontal3Icon
                          className={classNames(projectcss.all, sty.svg__cZnaG)}
                          role={"img"}
                        />

                        <div
                          data-plasmic-name={"badge8"}
                          data-plasmic-override={overrides.badge8}
                          className={classNames(projectcss.all, sty.badge8)}
                        >
                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"xBaseBadge8"}
                            data-plasmic-override={overrides.xBaseBadge8}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.xBaseBadge8
                            )}
                          >
                            <Icon5Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__ai2As
                              )}
                              role={"img"}
                            />

                            <div
                              data-plasmic-name={"text10"}
                              data-plasmic-override={overrides.text10}
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text10
                              )}
                            >
                              {"Sales"}
                            </div>

                            {false ? (
                              <Icon6Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___4C4Dp
                                )}
                                role={"img"}
                              />
                            ) : null}
                          </p.Stack>
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__njToG
                          )}
                        >
                          {"$2,794.00"}
                        </div>

                        <div
                          data-plasmic-name={"compo9"}
                          data-plasmic-override={overrides.compo9}
                          className={classNames(projectcss.all, sty.compo9)}
                        >
                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"avatarOneLine10"}
                            data-plasmic-override={overrides.avatarOneLine10}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.avatarOneLine10
                            )}
                          >
                            <div
                              data-plasmic-name={"avatar11"}
                              data-plasmic-override={overrides.avatar11}
                              className={classNames(
                                projectcss.all,
                                sty.avatar11
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={"statusDot10"}
                                  data-plasmic-override={overrides.statusDot10}
                                  className={classNames(
                                    projectcss.all,
                                    sty.statusDot10
                                  )}
                                />
                              ) : null}
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__f1XiC
                              )}
                            >
                              {"CLASSICO"}
                            </div>
                          </p.Stack>

                          <Horizontal3Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__xMPzD
                            )}
                            role={"img"}
                          />

                          <div
                            data-plasmic-name={"badge9"}
                            data-plasmic-override={overrides.badge9}
                            className={classNames(projectcss.all, sty.badge9)}
                          >
                            <p.Stack
                              as={"div"}
                              data-plasmic-name={"xBaseBadge9"}
                              data-plasmic-override={overrides.xBaseBadge9}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.xBaseBadge9
                              )}
                            >
                              <Icon5Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___2Qkkb
                                )}
                                role={"img"}
                              />

                              <div
                                data-plasmic-name={"text11"}
                                data-plasmic-override={overrides.text11}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text11
                                )}
                              >
                                {"Sales"}
                              </div>

                              {false ? (
                                <Icon6Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__ruH8D
                                  )}
                                  role={"img"}
                                />
                              ) : null}
                            </p.Stack>
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__luPuk
                            )}
                          >
                            {"$2,794.00"}
                          </div>
                        </div>

                        <div
                          data-plasmic-name={"compo10"}
                          data-plasmic-override={overrides.compo10}
                          className={classNames(projectcss.all, sty.compo10)}
                        >
                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"avatarOneLine11"}
                            data-plasmic-override={overrides.avatarOneLine11}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.avatarOneLine11
                            )}
                          >
                            <div
                              data-plasmic-name={"avatar12"}
                              data-plasmic-override={overrides.avatar12}
                              className={classNames(
                                projectcss.all,
                                sty.avatar12
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={"statusDot11"}
                                  data-plasmic-override={overrides.statusDot11}
                                  className={classNames(
                                    projectcss.all,
                                    sty.statusDot11
                                  )}
                                />
                              ) : null}
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__poBBl
                              )}
                            >
                              {"CLASSICO"}
                            </div>
                          </p.Stack>

                          <Horizontal3Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__yExk
                            )}
                            role={"img"}
                          />

                          <div
                            data-plasmic-name={"badge10"}
                            data-plasmic-override={overrides.badge10}
                            className={classNames(projectcss.all, sty.badge10)}
                          >
                            <p.Stack
                              as={"div"}
                              data-plasmic-name={"xBaseBadge10"}
                              data-plasmic-override={overrides.xBaseBadge10}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.xBaseBadge10
                              )}
                            >
                              <Icon5Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__v2Sab
                                )}
                                role={"img"}
                              />

                              <div
                                data-plasmic-name={"text12"}
                                data-plasmic-override={overrides.text12}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text12
                                )}
                              >
                                {"Sales"}
                              </div>

                              {false ? (
                                <Icon6Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__eTOp
                                  )}
                                  role={"img"}
                                />
                              ) : null}
                            </p.Stack>
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__nWsQx
                            )}
                          >
                            {"$2,794.00"}
                          </div>
                        </div>

                        <div
                          data-plasmic-name={"compo11"}
                          data-plasmic-override={overrides.compo11}
                          className={classNames(projectcss.all, sty.compo11)}
                        >
                          <p.Stack
                            as={"div"}
                            data-plasmic-name={"avatarOneLine12"}
                            data-plasmic-override={overrides.avatarOneLine12}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.avatarOneLine12
                            )}
                          >
                            <div
                              data-plasmic-name={"avatar13"}
                              data-plasmic-override={overrides.avatar13}
                              className={classNames(
                                projectcss.all,
                                sty.avatar13
                              )}
                            >
                              {false ? (
                                <div
                                  data-plasmic-name={"statusDot12"}
                                  data-plasmic-override={overrides.statusDot12}
                                  className={classNames(
                                    projectcss.all,
                                    sty.statusDot12
                                  )}
                                />
                              ) : null}
                            </div>

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__iGgN4
                              )}
                            >
                              {"CLASSICO"}
                            </div>
                          </p.Stack>

                          <Horizontal3Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg__leFlK
                            )}
                            role={"img"}
                          />

                          <div
                            data-plasmic-name={"badge11"}
                            data-plasmic-override={overrides.badge11}
                            className={classNames(projectcss.all, sty.badge11)}
                          >
                            <p.Stack
                              as={"div"}
                              data-plasmic-name={"xBaseBadge11"}
                              data-plasmic-override={overrides.xBaseBadge11}
                              hasGap={true}
                              className={classNames(
                                projectcss.all,
                                sty.xBaseBadge11
                              )}
                            >
                              <Icon5Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___3D4Cc
                                )}
                                role={"img"}
                              />

                              <div
                                data-plasmic-name={"text13"}
                                data-plasmic-override={overrides.text13}
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text13
                                )}
                              >
                                {"Sales"}
                              </div>

                              {false ? (
                                <Icon6Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg___6WZpU
                                  )}
                                  role={"img"}
                                />
                              ) : null}
                            </p.Stack>
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__vx72W
                            )}
                          >
                            {"$2,794.00"}
                          </div>
                        </div>
                      </div>
                    </div>

                    <div
                      data-plasmic-name={"compo12"}
                      data-plasmic-override={overrides.compo12}
                      className={classNames(projectcss.all, sty.compo12)}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"avatarOneLine13"}
                        data-plasmic-override={overrides.avatarOneLine13}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.avatarOneLine13
                        )}
                      >
                        <div
                          data-plasmic-name={"avatar14"}
                          data-plasmic-override={overrides.avatar14}
                          className={classNames(projectcss.all, sty.avatar14)}
                        >
                          {false ? (
                            <div
                              data-plasmic-name={"statusDot13"}
                              data-plasmic-override={overrides.statusDot13}
                              className={classNames(
                                projectcss.all,
                                sty.statusDot13
                              )}
                            />
                          ) : null}
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__nEd6F
                          )}
                        >
                          {"MANTRA"}
                        </div>
                      </p.Stack>

                      <Horizontal3Icon
                        className={classNames(projectcss.all, sty.svg___3NbSi)}
                        role={"img"}
                      />

                      <div
                        data-plasmic-name={"badge12"}
                        data-plasmic-override={overrides.badge12}
                        className={classNames(projectcss.all, sty.badge12)}
                      >
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"xBaseBadge12"}
                          data-plasmic-override={overrides.xBaseBadge12}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.xBaseBadge12
                          )}
                        >
                          <Icon5Icon
                            className={classNames(
                              projectcss.all,
                              sty.svg___8Cccc
                            )}
                            role={"img"}
                          />

                          <div
                            data-plasmic-name={"text14"}
                            data-plasmic-override={overrides.text14}
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text14
                            )}
                          >
                            {"Sales"}
                          </div>

                          {false ? (
                            <Icon6Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__i8DDw
                              )}
                              role={"img"}
                            />
                          ) : null}
                        </p.Stack>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__xohx5
                        )}
                      >
                        {"$2,794.00"}
                      </div>
                    </div>

                    <div
                      data-plasmic-name={"columns"}
                      data-plasmic-override={overrides.columns}
                      className={classNames(projectcss.all, sty.columns)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__h78Iq
                        )}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__bCdSj
                        )}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column___8HLy4
                        )}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__m407B
                        )}
                      />
                    </div>
                  </p.Stack>
                ) : null}
              </div>
            ) : null}
          </div>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "home",
    "rectangle6",
    "frame70",
    "_1OneLine",
    "right",
    "xBase1OneLineLeftLabelIcon",
    "_1OneLine2",
    "right2",
    "xBase1OneLineLeftLabelIcon2",
    "_1OneLine3",
    "right3",
    "xBase1OneLineLeftLabelIcon3",
    "group1",
    "logo",
    "rectangle1",
    "searchBar",
    "right4",
    "left",
    "textState",
    "frame71",
    "group10",
    "counter",
    "frame7",
    "avatar",
    "status",
    "frame6",
    "avatarOneLine",
    "avatar2",
    "kk",
    "statusDot",
    "mikeBrown",
    "frame108",
    "frame109",
    "frame111",
    "button",
    "button2",
    "text2",
    "counter2",
    "compo2",
    "avatarOneLine2",
    "avatar3",
    "statusDot2",
    "badge",
    "xBaseBadge",
    "text3",
    "compo1",
    "avatarOneLine3",
    "avatar4",
    "statusDot3",
    "badge2",
    "xBaseBadge2",
    "text4",
    "compo3",
    "avatarOneLine4",
    "avatar5",
    "statusDot4",
    "badge3",
    "xBaseBadge3",
    "text5",
    "compo4",
    "avatarOneLine5",
    "avatar6",
    "statusDot5",
    "badge4",
    "xBaseBadge4",
    "text6",
    "compo5",
    "avatarOneLine6",
    "avatar7",
    "statusDot6",
    "badge5",
    "xBaseBadge5",
    "text7",
    "compo6",
    "avatarOneLine7",
    "avatar8",
    "statusDot7",
    "badge6",
    "xBaseBadge6",
    "text8",
    "compo7",
    "avatarOneLine8",
    "avatar9",
    "statusDot8",
    "badge7",
    "xBaseBadge7",
    "text9",
    "compo8",
    "avatarOneLine9",
    "avatar10",
    "statusDot9",
    "badge8",
    "xBaseBadge8",
    "text10",
    "compo9",
    "avatarOneLine10",
    "avatar11",
    "statusDot10",
    "badge9",
    "xBaseBadge9",
    "text11",
    "compo10",
    "avatarOneLine11",
    "avatar12",
    "statusDot11",
    "badge10",
    "xBaseBadge10",
    "text12",
    "compo11",
    "avatarOneLine12",
    "avatar13",
    "statusDot12",
    "badge11",
    "xBaseBadge11",
    "text13",
    "compo12",
    "avatarOneLine13",
    "avatar14",
    "statusDot13",
    "badge12",
    "xBaseBadge12",
    "text14",
    "columns"
  ],
  home: [
    "home",
    "rectangle6",
    "frame70",
    "_1OneLine",
    "right",
    "xBase1OneLineLeftLabelIcon",
    "_1OneLine2",
    "right2",
    "xBase1OneLineLeftLabelIcon2",
    "_1OneLine3",
    "right3",
    "xBase1OneLineLeftLabelIcon3",
    "group1",
    "logo",
    "rectangle1",
    "searchBar",
    "right4",
    "left",
    "textState",
    "frame71",
    "group10",
    "counter",
    "frame7",
    "avatar",
    "status",
    "frame6",
    "avatarOneLine",
    "avatar2",
    "kk",
    "statusDot",
    "mikeBrown",
    "frame108",
    "frame109",
    "frame111",
    "button",
    "button2",
    "text2",
    "counter2",
    "compo2",
    "avatarOneLine2",
    "avatar3",
    "statusDot2",
    "badge",
    "xBaseBadge",
    "text3",
    "compo1",
    "avatarOneLine3",
    "avatar4",
    "statusDot3",
    "badge2",
    "xBaseBadge2",
    "text4",
    "compo3",
    "avatarOneLine4",
    "avatar5",
    "statusDot4",
    "badge3",
    "xBaseBadge3",
    "text5",
    "compo4",
    "avatarOneLine5",
    "avatar6",
    "statusDot5",
    "badge4",
    "xBaseBadge4",
    "text6",
    "compo5",
    "avatarOneLine6",
    "avatar7",
    "statusDot6",
    "badge5",
    "xBaseBadge5",
    "text7",
    "compo6",
    "avatarOneLine7",
    "avatar8",
    "statusDot7",
    "badge6",
    "xBaseBadge6",
    "text8",
    "compo7",
    "avatarOneLine8",
    "avatar9",
    "statusDot8",
    "badge7",
    "xBaseBadge7",
    "text9",
    "compo8",
    "avatarOneLine9",
    "avatar10",
    "statusDot9",
    "badge8",
    "xBaseBadge8",
    "text10",
    "compo9",
    "avatarOneLine10",
    "avatar11",
    "statusDot10",
    "badge9",
    "xBaseBadge9",
    "text11",
    "compo10",
    "avatarOneLine11",
    "avatar12",
    "statusDot11",
    "badge10",
    "xBaseBadge10",
    "text12",
    "compo11",
    "avatarOneLine12",
    "avatar13",
    "statusDot12",
    "badge11",
    "xBaseBadge11",
    "text13",
    "compo12",
    "avatarOneLine13",
    "avatar14",
    "statusDot13",
    "badge12",
    "xBaseBadge12",
    "text14",
    "columns"
  ],
  rectangle6: ["rectangle6"],
  frame70: ["frame70"],
  _1OneLine: ["_1OneLine", "right", "xBase1OneLineLeftLabelIcon"],
  right: ["right"],
  xBase1OneLineLeftLabelIcon: ["xBase1OneLineLeftLabelIcon"],
  _1OneLine2: ["_1OneLine2", "right2", "xBase1OneLineLeftLabelIcon2"],
  right2: ["right2"],
  xBase1OneLineLeftLabelIcon2: ["xBase1OneLineLeftLabelIcon2"],
  _1OneLine3: ["_1OneLine3", "right3", "xBase1OneLineLeftLabelIcon3"],
  right3: ["right3"],
  xBase1OneLineLeftLabelIcon3: ["xBase1OneLineLeftLabelIcon3"],
  group1: ["group1"],
  logo: ["logo", "rectangle1"],
  rectangle1: ["rectangle1"],
  searchBar: ["searchBar", "right4", "left", "textState"],
  right4: ["right4"],
  left: ["left", "textState"],
  textState: ["textState"],
  frame71: [
    "frame71",
    "group10",
    "counter",
    "frame7",
    "avatar",
    "status",
    "frame6",
    "avatarOneLine",
    "avatar2",
    "kk",
    "statusDot",
    "mikeBrown"
  ],
  group10: ["group10", "counter"],
  counter: ["counter"],
  frame7: ["frame7", "avatar", "status"],
  avatar: ["avatar", "status"],
  status: ["status"],
  frame6: [
    "frame6",
    "avatarOneLine",
    "avatar2",
    "kk",
    "statusDot",
    "mikeBrown"
  ],
  avatarOneLine: ["avatarOneLine", "avatar2", "kk", "statusDot", "mikeBrown"],
  avatar2: ["avatar2", "kk", "statusDot"],
  kk: ["kk"],
  statusDot: ["statusDot"],
  mikeBrown: ["mikeBrown"],
  frame108: [
    "frame108",
    "frame109",
    "frame111",
    "button",
    "button2",
    "text2",
    "counter2"
  ],
  frame109: ["frame109"],
  frame111: ["frame111", "button", "button2", "text2", "counter2"],
  button: ["button", "button2", "text2", "counter2"],
  button2: ["button2", "text2", "counter2"],
  text2: ["text2"],
  counter2: ["counter2"],
  compo2: [
    "compo2",
    "avatarOneLine2",
    "avatar3",
    "statusDot2",
    "badge",
    "xBaseBadge",
    "text3"
  ],
  avatarOneLine2: ["avatarOneLine2", "avatar3", "statusDot2"],
  avatar3: ["avatar3", "statusDot2"],
  statusDot2: ["statusDot2"],
  badge: ["badge", "xBaseBadge", "text3"],
  xBaseBadge: ["xBaseBadge", "text3"],
  text3: ["text3"],
  compo1: [
    "compo1",
    "avatarOneLine3",
    "avatar4",
    "statusDot3",
    "badge2",
    "xBaseBadge2",
    "text4"
  ],
  avatarOneLine3: ["avatarOneLine3", "avatar4", "statusDot3"],
  avatar4: ["avatar4", "statusDot3"],
  statusDot3: ["statusDot3"],
  badge2: ["badge2", "xBaseBadge2", "text4"],
  xBaseBadge2: ["xBaseBadge2", "text4"],
  text4: ["text4"],
  compo3: [
    "compo3",
    "avatarOneLine4",
    "avatar5",
    "statusDot4",
    "badge3",
    "xBaseBadge3",
    "text5",
    "compo4",
    "avatarOneLine5",
    "avatar6",
    "statusDot5",
    "badge4",
    "xBaseBadge4",
    "text6",
    "compo5",
    "avatarOneLine6",
    "avatar7",
    "statusDot6",
    "badge5",
    "xBaseBadge5",
    "text7",
    "compo6",
    "avatarOneLine7",
    "avatar8",
    "statusDot7",
    "badge6",
    "xBaseBadge6",
    "text8"
  ],
  avatarOneLine4: ["avatarOneLine4", "avatar5", "statusDot4"],
  avatar5: ["avatar5", "statusDot4"],
  statusDot4: ["statusDot4"],
  badge3: ["badge3", "xBaseBadge3", "text5"],
  xBaseBadge3: ["xBaseBadge3", "text5"],
  text5: ["text5"],
  compo4: [
    "compo4",
    "avatarOneLine5",
    "avatar6",
    "statusDot5",
    "badge4",
    "xBaseBadge4",
    "text6",
    "compo5",
    "avatarOneLine6",
    "avatar7",
    "statusDot6",
    "badge5",
    "xBaseBadge5",
    "text7",
    "compo6",
    "avatarOneLine7",
    "avatar8",
    "statusDot7",
    "badge6",
    "xBaseBadge6",
    "text8"
  ],
  avatarOneLine5: ["avatarOneLine5", "avatar6", "statusDot5"],
  avatar6: ["avatar6", "statusDot5"],
  statusDot5: ["statusDot5"],
  badge4: ["badge4", "xBaseBadge4", "text6"],
  xBaseBadge4: ["xBaseBadge4", "text6"],
  text6: ["text6"],
  compo5: [
    "compo5",
    "avatarOneLine6",
    "avatar7",
    "statusDot6",
    "badge5",
    "xBaseBadge5",
    "text7"
  ],
  avatarOneLine6: ["avatarOneLine6", "avatar7", "statusDot6"],
  avatar7: ["avatar7", "statusDot6"],
  statusDot6: ["statusDot6"],
  badge5: ["badge5", "xBaseBadge5", "text7"],
  xBaseBadge5: ["xBaseBadge5", "text7"],
  text7: ["text7"],
  compo6: [
    "compo6",
    "avatarOneLine7",
    "avatar8",
    "statusDot7",
    "badge6",
    "xBaseBadge6",
    "text8"
  ],
  avatarOneLine7: ["avatarOneLine7", "avatar8", "statusDot7"],
  avatar8: ["avatar8", "statusDot7"],
  statusDot7: ["statusDot7"],
  badge6: ["badge6", "xBaseBadge6", "text8"],
  xBaseBadge6: ["xBaseBadge6", "text8"],
  text8: ["text8"],
  compo7: [
    "compo7",
    "avatarOneLine8",
    "avatar9",
    "statusDot8",
    "badge7",
    "xBaseBadge7",
    "text9",
    "compo8",
    "avatarOneLine9",
    "avatar10",
    "statusDot9",
    "badge8",
    "xBaseBadge8",
    "text10",
    "compo9",
    "avatarOneLine10",
    "avatar11",
    "statusDot10",
    "badge9",
    "xBaseBadge9",
    "text11",
    "compo10",
    "avatarOneLine11",
    "avatar12",
    "statusDot11",
    "badge10",
    "xBaseBadge10",
    "text12",
    "compo11",
    "avatarOneLine12",
    "avatar13",
    "statusDot12",
    "badge11",
    "xBaseBadge11",
    "text13"
  ],
  avatarOneLine8: ["avatarOneLine8", "avatar9", "statusDot8"],
  avatar9: ["avatar9", "statusDot8"],
  statusDot8: ["statusDot8"],
  badge7: ["badge7", "xBaseBadge7", "text9"],
  xBaseBadge7: ["xBaseBadge7", "text9"],
  text9: ["text9"],
  compo8: [
    "compo8",
    "avatarOneLine9",
    "avatar10",
    "statusDot9",
    "badge8",
    "xBaseBadge8",
    "text10",
    "compo9",
    "avatarOneLine10",
    "avatar11",
    "statusDot10",
    "badge9",
    "xBaseBadge9",
    "text11",
    "compo10",
    "avatarOneLine11",
    "avatar12",
    "statusDot11",
    "badge10",
    "xBaseBadge10",
    "text12",
    "compo11",
    "avatarOneLine12",
    "avatar13",
    "statusDot12",
    "badge11",
    "xBaseBadge11",
    "text13"
  ],
  avatarOneLine9: ["avatarOneLine9", "avatar10", "statusDot9"],
  avatar10: ["avatar10", "statusDot9"],
  statusDot9: ["statusDot9"],
  badge8: ["badge8", "xBaseBadge8", "text10"],
  xBaseBadge8: ["xBaseBadge8", "text10"],
  text10: ["text10"],
  compo9: [
    "compo9",
    "avatarOneLine10",
    "avatar11",
    "statusDot10",
    "badge9",
    "xBaseBadge9",
    "text11"
  ],
  avatarOneLine10: ["avatarOneLine10", "avatar11", "statusDot10"],
  avatar11: ["avatar11", "statusDot10"],
  statusDot10: ["statusDot10"],
  badge9: ["badge9", "xBaseBadge9", "text11"],
  xBaseBadge9: ["xBaseBadge9", "text11"],
  text11: ["text11"],
  compo10: [
    "compo10",
    "avatarOneLine11",
    "avatar12",
    "statusDot11",
    "badge10",
    "xBaseBadge10",
    "text12"
  ],
  avatarOneLine11: ["avatarOneLine11", "avatar12", "statusDot11"],
  avatar12: ["avatar12", "statusDot11"],
  statusDot11: ["statusDot11"],
  badge10: ["badge10", "xBaseBadge10", "text12"],
  xBaseBadge10: ["xBaseBadge10", "text12"],
  text12: ["text12"],
  compo11: [
    "compo11",
    "avatarOneLine12",
    "avatar13",
    "statusDot12",
    "badge11",
    "xBaseBadge11",
    "text13"
  ],
  avatarOneLine12: ["avatarOneLine12", "avatar13", "statusDot12"],
  avatar13: ["avatar13", "statusDot12"],
  statusDot12: ["statusDot12"],
  badge11: ["badge11", "xBaseBadge11", "text13"],
  xBaseBadge11: ["xBaseBadge11", "text13"],
  text13: ["text13"],
  compo12: [
    "compo12",
    "avatarOneLine13",
    "avatar14",
    "statusDot13",
    "badge12",
    "xBaseBadge12",
    "text14"
  ],
  avatarOneLine13: ["avatarOneLine13", "avatar14", "statusDot13"],
  avatar14: ["avatar14", "statusDot13"],
  statusDot13: ["statusDot13"],
  badge12: ["badge12", "xBaseBadge12", "text14"],
  xBaseBadge12: ["xBaseBadge12", "text14"],
  text14: ["text14"],
  columns: ["columns"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  home: "div";
  rectangle6: "div";
  frame70: "div";
  _1OneLine: "div";
  right: "div";
  xBase1OneLineLeftLabelIcon: "div";
  _1OneLine2: "div";
  right2: "div";
  xBase1OneLineLeftLabelIcon2: "div";
  _1OneLine3: "div";
  right3: "div";
  xBase1OneLineLeftLabelIcon3: "div";
  group1: "div";
  logo: "div";
  rectangle1: "div";
  searchBar: "div";
  right4: "div";
  left: "div";
  textState: "div";
  frame71: "div";
  group10: "div";
  counter: "div";
  frame7: "div";
  avatar: "div";
  status: "div";
  frame6: "div";
  avatarOneLine: "div";
  avatar2: "div";
  kk: "div";
  statusDot: "div";
  mikeBrown: "div";
  frame108: "div";
  frame109: "div";
  frame111: "div";
  button: "div";
  button2: "div";
  text2: "div";
  counter2: "div";
  compo2: "div";
  avatarOneLine2: "div";
  avatar3: "div";
  statusDot2: "div";
  badge: "div";
  xBaseBadge: "div";
  text3: "div";
  compo1: "div";
  avatarOneLine3: "div";
  avatar4: "div";
  statusDot3: "div";
  badge2: "div";
  xBaseBadge2: "div";
  text4: "div";
  compo3: "div";
  avatarOneLine4: "div";
  avatar5: "div";
  statusDot4: "div";
  badge3: "div";
  xBaseBadge3: "div";
  text5: "div";
  compo4: "div";
  avatarOneLine5: "div";
  avatar6: "div";
  statusDot5: "div";
  badge4: "div";
  xBaseBadge4: "div";
  text6: "div";
  compo5: "div";
  avatarOneLine6: "div";
  avatar7: "div";
  statusDot6: "div";
  badge5: "div";
  xBaseBadge5: "div";
  text7: "div";
  compo6: "div";
  avatarOneLine7: "div";
  avatar8: "div";
  statusDot7: "div";
  badge6: "div";
  xBaseBadge6: "div";
  text8: "div";
  compo7: "div";
  avatarOneLine8: "div";
  avatar9: "div";
  statusDot8: "div";
  badge7: "div";
  xBaseBadge7: "div";
  text9: "div";
  compo8: "div";
  avatarOneLine9: "div";
  avatar10: "div";
  statusDot9: "div";
  badge8: "div";
  xBaseBadge8: "div";
  text10: "div";
  compo9: "div";
  avatarOneLine10: "div";
  avatar11: "div";
  statusDot10: "div";
  badge9: "div";
  xBaseBadge9: "div";
  text11: "div";
  compo10: "div";
  avatarOneLine11: "div";
  avatar12: "div";
  statusDot11: "div";
  badge10: "div";
  xBaseBadge10: "div";
  text12: "div";
  compo11: "div";
  avatarOneLine12: "div";
  avatar13: "div";
  statusDot12: "div";
  badge11: "div";
  xBaseBadge11: "div";
  text13: "div";
  compo12: "div";
  avatarOneLine13: "div";
  avatar14: "div";
  statusDot13: "div";
  badge12: "div";
  xBaseBadge12: "div";
  text14: "div";
  columns: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicAppdashboardhome__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicAppdashboardhome__VariantsArgs;
    args?: PlasmicAppdashboardhome__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicAppdashboardhome__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicAppdashboardhome__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicAppdashboardhome__ArgProps,
      internalVariantPropNames: PlasmicAppdashboardhome__VariantProps
    });

    return PlasmicAppdashboardhome__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicAppdashboardhome";
  } else {
    func.displayName = `PlasmicAppdashboardhome.${nodeName}`;
  }
  return func;
}

export const PlasmicAppdashboardhome = Object.assign(
  // Top-level PlasmicAppdashboardhome renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    home: makeNodeComponent("home"),
    rectangle6: makeNodeComponent("rectangle6"),
    frame70: makeNodeComponent("frame70"),
    _1OneLine: makeNodeComponent("_1OneLine"),
    right: makeNodeComponent("right"),
    xBase1OneLineLeftLabelIcon: makeNodeComponent("xBase1OneLineLeftLabelIcon"),
    _1OneLine2: makeNodeComponent("_1OneLine2"),
    right2: makeNodeComponent("right2"),
    xBase1OneLineLeftLabelIcon2: makeNodeComponent(
      "xBase1OneLineLeftLabelIcon2"
    ),
    _1OneLine3: makeNodeComponent("_1OneLine3"),
    right3: makeNodeComponent("right3"),
    xBase1OneLineLeftLabelIcon3: makeNodeComponent(
      "xBase1OneLineLeftLabelIcon3"
    ),
    group1: makeNodeComponent("group1"),
    logo: makeNodeComponent("logo"),
    rectangle1: makeNodeComponent("rectangle1"),
    searchBar: makeNodeComponent("searchBar"),
    right4: makeNodeComponent("right4"),
    left: makeNodeComponent("left"),
    textState: makeNodeComponent("textState"),
    frame71: makeNodeComponent("frame71"),
    group10: makeNodeComponent("group10"),
    counter: makeNodeComponent("counter"),
    frame7: makeNodeComponent("frame7"),
    avatar: makeNodeComponent("avatar"),
    status: makeNodeComponent("status"),
    frame6: makeNodeComponent("frame6"),
    avatarOneLine: makeNodeComponent("avatarOneLine"),
    avatar2: makeNodeComponent("avatar2"),
    kk: makeNodeComponent("kk"),
    statusDot: makeNodeComponent("statusDot"),
    mikeBrown: makeNodeComponent("mikeBrown"),
    frame108: makeNodeComponent("frame108"),
    frame109: makeNodeComponent("frame109"),
    frame111: makeNodeComponent("frame111"),
    button: makeNodeComponent("button"),
    button2: makeNodeComponent("button2"),
    text2: makeNodeComponent("text2"),
    counter2: makeNodeComponent("counter2"),
    compo2: makeNodeComponent("compo2"),
    avatarOneLine2: makeNodeComponent("avatarOneLine2"),
    avatar3: makeNodeComponent("avatar3"),
    statusDot2: makeNodeComponent("statusDot2"),
    badge: makeNodeComponent("badge"),
    xBaseBadge: makeNodeComponent("xBaseBadge"),
    text3: makeNodeComponent("text3"),
    compo1: makeNodeComponent("compo1"),
    avatarOneLine3: makeNodeComponent("avatarOneLine3"),
    avatar4: makeNodeComponent("avatar4"),
    statusDot3: makeNodeComponent("statusDot3"),
    badge2: makeNodeComponent("badge2"),
    xBaseBadge2: makeNodeComponent("xBaseBadge2"),
    text4: makeNodeComponent("text4"),
    compo3: makeNodeComponent("compo3"),
    avatarOneLine4: makeNodeComponent("avatarOneLine4"),
    avatar5: makeNodeComponent("avatar5"),
    statusDot4: makeNodeComponent("statusDot4"),
    badge3: makeNodeComponent("badge3"),
    xBaseBadge3: makeNodeComponent("xBaseBadge3"),
    text5: makeNodeComponent("text5"),
    compo4: makeNodeComponent("compo4"),
    avatarOneLine5: makeNodeComponent("avatarOneLine5"),
    avatar6: makeNodeComponent("avatar6"),
    statusDot5: makeNodeComponent("statusDot5"),
    badge4: makeNodeComponent("badge4"),
    xBaseBadge4: makeNodeComponent("xBaseBadge4"),
    text6: makeNodeComponent("text6"),
    compo5: makeNodeComponent("compo5"),
    avatarOneLine6: makeNodeComponent("avatarOneLine6"),
    avatar7: makeNodeComponent("avatar7"),
    statusDot6: makeNodeComponent("statusDot6"),
    badge5: makeNodeComponent("badge5"),
    xBaseBadge5: makeNodeComponent("xBaseBadge5"),
    text7: makeNodeComponent("text7"),
    compo6: makeNodeComponent("compo6"),
    avatarOneLine7: makeNodeComponent("avatarOneLine7"),
    avatar8: makeNodeComponent("avatar8"),
    statusDot7: makeNodeComponent("statusDot7"),
    badge6: makeNodeComponent("badge6"),
    xBaseBadge6: makeNodeComponent("xBaseBadge6"),
    text8: makeNodeComponent("text8"),
    compo7: makeNodeComponent("compo7"),
    avatarOneLine8: makeNodeComponent("avatarOneLine8"),
    avatar9: makeNodeComponent("avatar9"),
    statusDot8: makeNodeComponent("statusDot8"),
    badge7: makeNodeComponent("badge7"),
    xBaseBadge7: makeNodeComponent("xBaseBadge7"),
    text9: makeNodeComponent("text9"),
    compo8: makeNodeComponent("compo8"),
    avatarOneLine9: makeNodeComponent("avatarOneLine9"),
    avatar10: makeNodeComponent("avatar10"),
    statusDot9: makeNodeComponent("statusDot9"),
    badge8: makeNodeComponent("badge8"),
    xBaseBadge8: makeNodeComponent("xBaseBadge8"),
    text10: makeNodeComponent("text10"),
    compo9: makeNodeComponent("compo9"),
    avatarOneLine10: makeNodeComponent("avatarOneLine10"),
    avatar11: makeNodeComponent("avatar11"),
    statusDot10: makeNodeComponent("statusDot10"),
    badge9: makeNodeComponent("badge9"),
    xBaseBadge9: makeNodeComponent("xBaseBadge9"),
    text11: makeNodeComponent("text11"),
    compo10: makeNodeComponent("compo10"),
    avatarOneLine11: makeNodeComponent("avatarOneLine11"),
    avatar12: makeNodeComponent("avatar12"),
    statusDot11: makeNodeComponent("statusDot11"),
    badge10: makeNodeComponent("badge10"),
    xBaseBadge10: makeNodeComponent("xBaseBadge10"),
    text12: makeNodeComponent("text12"),
    compo11: makeNodeComponent("compo11"),
    avatarOneLine12: makeNodeComponent("avatarOneLine12"),
    avatar13: makeNodeComponent("avatar13"),
    statusDot12: makeNodeComponent("statusDot12"),
    badge11: makeNodeComponent("badge11"),
    xBaseBadge11: makeNodeComponent("xBaseBadge11"),
    text13: makeNodeComponent("text13"),
    compo12: makeNodeComponent("compo12"),
    avatarOneLine13: makeNodeComponent("avatarOneLine13"),
    avatar14: makeNodeComponent("avatar14"),
    statusDot13: makeNodeComponent("statusDot13"),
    badge12: makeNodeComponent("badge12"),
    xBaseBadge12: makeNodeComponent("xBaseBadge12"),
    text14: makeNodeComponent("text14"),
    columns: makeNodeComponent("columns"),

    // Metadata about props expected for PlasmicAppdashboardhome
    internalVariantProps: PlasmicAppdashboardhome__VariantProps,
    internalArgProps: PlasmicAppdashboardhome__ArgProps
  }
);

export default PlasmicAppdashboardhome;
/* prettier-ignore-end */
